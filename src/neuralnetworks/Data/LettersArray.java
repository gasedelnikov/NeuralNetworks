package neuralnetworks.Data;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author g_sedelnikov
 */
public class LettersArray {
    public static Letter[] getBrokenLetters(int lettersCount){
        return getLetters(lettersCount, LettersArray.str2);
    }    

    public static Letter[] getLetters(int lettersCount){
        return getLetters(lettersCount, LettersArray.str0);
    }

    public static Letter[] getLettersAndBrokenLetters(int lettersCount){
        Letter[] part1 = getLetters(lettersCount, LettersArray.str2);
        Letter[] part2 = getLetters(lettersCount, LettersArray.str0);
        
        Letter[] result = new Letter[2*lettersCount];
        System.arraycopy(part1, 0, result, 0            , part1.length);
        System.arraycopy(part2, 0, result, lettersCount , part2.length);
        return result;
    }    
    
    private static Letter[] getLetters(int lettersCount, String str){
        List<Letter> letters = new  ArrayList<>();
        int pos1 = 0;
        int pos2 = str.indexOf("\n", pos1);
        int index = 0;
        while ((pos2 > 0) && (index < lettersCount)){
            int posSpace = str.indexOf(" ", pos1);
            String name = str.substring(pos1, pos1+1);
            String code = str.substring(pos1, posSpace);
            String dataStr = str.substring(posSpace+1, pos2).replace("*", "").replace(" ", "");
            byte[] dataStrBytes = dataStr.getBytes();
            double[] data = new double[dataStrBytes.length];
            for (int i=0; i < dataStrBytes.length; i++){
                data[i] = dataStrBytes[i] - 48;
            }
           
            letters.add(new Letter(index++, code, name, data));
//            System.out.println(name + " " + code+ " " + dataStr);
            pos1 = pos2+1;
            pos2 = str.indexOf("\n", pos1);           
       }
       
       return letters.toArray(new Letter[0]);
   }
    
    private static final String str0 =
        "A  0011000*0011000*0100100*1000010*1111110*1000010*1000010*1000010\n" +
        "Б  1111100*1000000*1000000*1111100*1000010*1000010*1000010*1111100\n" +
        "B  1111100*1000010*1000010*1111100*1000010*1000010*1000010*1111100\n" +
        "Г  1111100*1000010*1000000*1000000*1000000*1000000*1000000*1000000\n" +
        "Д  0011000*0100100*0100100*0100100*0100100*0100100*1111110*1000010\n" +
        "E  1111110*1000000*1000000*1111100*1000000*1000000*1000000*1111110\n" +
        "Ж  1101011*0101010*0101010*0011100*0011100*0101010*0101010*1101011\n" +
        "З  0111100*1000010*0000010*0011100*0000010*0000010*1000010*0111100\n" +
        "И  1000010*1000010*1000110*1001010*1010010*1100010*1000010*1000010\n" +
        "K  1000010*1000100*1001000*1010000*1110000*1001000*1000100*1000010\n" +
        "Л  0000110*0001010*0010010*0010010*0010010*0010010*0100010*1000010\n" +
        "M  1000001*1100011*1010101*1001001*1000001*1000001*1000001*1000001\n" +
        "H  1000010*1000010*1000010*1111110*1000010*1000010*1000010*1000010\n" +
        "O  0111100*1000010*1000010*1000010*1000010*1000010*1000010*0111100\n" +
        "П  1111110*1000010*1000010*1000010*1000010*1000010*1000010*1000010\n" +
        "P  1111100*1000010*1000010*1111100*1000000*1000000*1000000*1000000\n" +
        "C  0111100*1000010*1000000*1000000*1000000*1000000*1000010*0111100\n" +
        "T  1111100*0010000*0010000*0010000*0010000*0010000*0010000*0010000\n" +
        "У  1000010*1000010*1000010*0111110*0000010*0000010*1000010*0111100\n" +
        "Ф  0001000*0111110*1001001*1001001*0111110*0001000*0001000*0001000\n" +
        "X  1000001*0100010*0010100*0001000*0001000*0010100*0100010*1000001\n" +
        "Ч  1000010*1000010*1000010*0111110*0000010*0000010*0000010*0000010\n" +
        "Ш  1001001*1001001*1001001*1001001*1001001*1001001*1001001*1111111\n" +
        "Ъ  1100000*0100000*0100000*0111100*0100001*0100001*0100001*0111110\n" +
        "Ы  1000001*1000001*1000001*1111001*1000101*1000101*1000101*1111001\n" +
        "Ь  0100000*0100000*0100000*0111100*0100001*0100001*0100001*0111110\n" +
        "Э  0111100*1000010*0000010*0011110*0000010*0000010*1000010*0111100\n" +
        "Ю  1001110*1010001*1010001*1110001*1010001*1010001*1010001*1001110\n" +
        "Я  0111110*1000010*1000010*0111110*0001010*0010010*0100010*1000010\n" ;
    
    private static final String str2 =
        "A2 0011000*0010000*0100100*1000010*1111110*1000010*1000010*1000001\n" +
        "Б2 1111110*1000000*1000000*1111100*1000010*1000010*1000010*1111100\n" +
        "B2 1111100*1000010*1000010*1111100*1000010*1000010*1000010*0111100\n" +
        "Г2 1111100*1000010*1000000*1000000*0000000*1000000*1000000*1000000\n" +
        "Д2 0011000*0100100*0100100*0100100*0100100*0100100*1110110*1000010\n" +
        "E2 1111110*1000000*1000000*1101100*1000000*1000000*1000000*1111110\n" +
        "Ж2 1101011*0101010*0101010*0011100*0010100*0101010*0101010*0100011\n" +
        "З2 0111100*1000010*0000010*0011100*0000010*0000010*1000010*0110100\n" +
        "И2 1000010*1000010*1000110*1000010*1010010*1100010*1000010*1000010\n" +
        "K2 1000001*1000100*1001000*1010000*1110000*1001000*1000100*1000010\n" +
        "Л2 0000110*0001010*0010010*0010010*0010010*0010010*0100010*1000000\n" +
        "M2 1000001*1100011*1010101*1001001*1000001*1000001*1000001*1000000\n" +
        "H2 1000010*1000010*1000010*1101110*1000010*1000010*1000010*1000010\n" +
        "O2 0110100*1000010*1000010*1000010*1000010*1000010*1000010*0111100\n" +
        "П2 1111110*1000010*1000010*1000010*1000010*1000010*1000010*1000000\n" +
        "P2 1101100*1000010*1000010*1111100*1000000*1000000*1000000*1000000\n" +
        "C2 0110100*1000010*1000000*1000000*1000000*1000000*1000010*0111100\n" +
        "T2 1111111*0010000*0010000*0010000*0010000*0010000*0010000*0010000\n" +
        "У2 1000010*1000010*1000010*0111010*0000010*0000010*1000010*0111100\n" +
        "Ф2 0001000*0111110*1001001*1001001*0110110*0001000*0001000*0001000\n" +
        "X2 1000001*0100010*0010100*0001000*0001000*0010100*0100010*1001001\n" +
        "Ч2 1000010*1000010*1000010*0111110*0000010*0000010*0000010*0000000\n" +
        "Ш2 1001001*1001001*1001001*1001001*1001001*1001001*1001001*1110111\n" +
        "Ъ2 1100000*0000000*0100000*0111100*0100001*0100001*0100001*0111110\n" +
        "Ы2 1000001*1000001*1000001*1111001*1000101*1000101*1000100*1111001\n" +
        "Ь2 0100000*0100000*0100000*0111100*0100001*0100001*0100001*0110110\n" +
        "Э2 0111110*1000010*0000010*0011110*0000010*0000010*1000010*0111100\n" +
        "Ю2 1001110*1010001*1010001*1110001*1010001*1010001*1010001*1001011\n" +
        "Я2 0111110*1000010*1000010*0111110*0001010*0010010*0100010*1000000\n";    
    
}
